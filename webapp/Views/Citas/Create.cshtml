@model Falco.WebApi.Models.Cita

@{
    ViewBag.Title = "Crear";
}

@{ var urlWebApi = FalcoMvc.Settings.UrlWebApi; }


<div id="content">

    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-pencil-square-o fa-fw "></i>
                Citas - Crear
            </h1>
        </div>
        <div class="clearfix"></div>
        <div class="col-xs-12 col-sm-6  col-md-4">
           @using (Html.BeginForm())
           {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">               
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.PacientId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("PacientId", null, htmlAttributes: new { @class = "form-control" })
                       
                        @Html.ValidationMessageFor(model => model.PacientId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control" , type = "datetime-local" }  })
                        @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoCitaId, "Tipo de Cita", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("TipoCitaId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoCitaId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="button" id="btnCrear" value="Crear" class="btn btn-default" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <span id="lblError" style="color:red;"></span>
                    </div>                    
                </div>
            </div>
           }


            <div>
                @Html.ActionLink("Regresar", "Index")
            </div>
        </div>
    </div>
</div>

@section pagespecific {
    <script type="text/javascript">
        var urlEndpoint = String('@urlWebApi');
        
        $(function () {
            $("#btnCrear").click(function (e) {
                var pacienteId = $("#PacientId option:selected").val();
                var fecha      = $("#Fecha").val();
                var tipoCitaId = $("#TipoCitaId option:selected").val();
                e.preventDefault();
                var cita = '{PacientId: "' + pacienteId + '" , Fecha : "' + fecha + '", TipoCitaId : "' + tipoCitaId + '"  }';
                console.log("cita", cita);
                $.ajax({
                    type: "POST",
                    url: urlEndpoint + "api/cita/crear",
                    data: cita,
                    contentType: "application/json;charset=utf-8",
                    datatype: 'json',
                    success: function (response) {
                        $("#lblError").text("Cita Creada Exitosamente");
                        window.location = "/citas";
                    },
                    failure: function (response) {
                        $("#lblError").text(response.responseText);
                        console.log(response.responseText);
                    },
                    error: function (response) {
                        $("#lblError").text(response.responseText);
                        console.log(response.responseText);
                    }
                });
            });
        });
    </script>
    
}

